syntax = 'proto3';
package rspub_pb;
import "Common.proto";

message ImageMessage {
    bytes image_data = 1;
    int32 height = 2;
    int32 width = 3;
    double hardware_ts = 4;
    int32 bpp=5;
    int32 format=6;
    // Optional extriniscs
    Vec3 translation=7;
    Vec4 rotation=8;
    // Optional secondary image (RGBD)
    bytes image_data_second = 9;
    int32 bpp_second = 10;
    int32 format_second = 11;
}


// typedef enum rs2_format
// {
//     RS2_FORMAT_ANY             , /**< When passed to enable stream, librealsense will try to provide best suited format */
//     RS2_FORMAT_Z16             , /**< 16-bit linear depth values. The depth is meters is equal to depth scale * pixel value. */
//     RS2_FORMAT_DISPARITY16     , /**< 16-bit float-point disparity values. Depth->Disparity conversion : Disparity = Baseline*FocalLength/Depth. */
//     RS2_FORMAT_XYZ32F          , /**< 32-bit floating point 3D coordinates. */
//     RS2_FORMAT_YUYV            , /**< 32-bit y0, u, y1, v data for every two pixels. Similar to YUV422 but packed in a different order - https://en.wikipedia.org/wiki/YUV */
//     RS2_FORMAT_RGB8            , /**< 8-bit red, green and blue channels */
//     RS2_FORMAT_BGR8            , /**< 8-bit blue, green, and red channels -- suitable for OpenCV */
//     RS2_FORMAT_RGBA8           , /**< 8-bit red, green and blue channels + constant alpha channel equal to FF */
//     RS2_FORMAT_BGRA8           , /**< 8-bit blue, green, and red channels + constant alpha channel equal to FF */
//     RS2_FORMAT_Y8              , /**< 8-bit per-pixel grayscale image */
//     RS2_FORMAT_Y16             , /**< 16-bit per-pixel grayscale image */
//     RS2_FORMAT_RAW10           , /**< Four 10 bits per pixel luminance values packed into a 5-byte macropixel */
//     RS2_FORMAT_RAW16           , /**< 16-bit raw image */
//     RS2_FORMAT_RAW8            , /**< 8-bit raw image */
//     RS2_FORMAT_UYVY            , /**< Similar to the standard YUYV pixel format, but packed in a different order */
//     RS2_FORMAT_MOTION_RAW      , /**< Raw data from the motion sensor */
//     RS2_FORMAT_MOTION_XYZ32F   , /**< Motion data packed as 3 32-bit float values, for X, Y, and Z axis */
//     RS2_FORMAT_GPIO_RAW        , /**< Raw data from the external sensors hooked to one of the GPIO's */
//     RS2_FORMAT_6DOF            , /**< Pose data packed as floats array, containing translation vector, rotation quaternion and prediction velocities and accelerations vectors */
//     RS2_FORMAT_DISPARITY32     , /**< 32-bit float-point disparity values. Depth->Disparity conversion : Disparity = Baseline*FocalLength/Depth */
//     RS2_FORMAT_Y10BPACK        , /**< 16-bit per-pixel grayscale image unpacked from 10 bits per pixel packed ([8:8:8:8:2222]) grey-scale image. The data is unpacked to LSB and padded with 6 zero bits */
//     RS2_FORMAT_DISTANCE        , /**< 32-bit float-point depth distance value.  */
//     RS2_FORMAT_MJPEG           , /**< Bitstream encoding for video in which an image of each frame is encoded as JPEG-DIB   */
//     RS2_FORMAT_COUNT             /**< Number of enumeration values. Not a valid input: intended to be used in for-loops. */
// } rs2_format;